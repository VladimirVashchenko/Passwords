<?xml version="1.0" encoding="UTF-8"?>
<project name="module_passwords" default="compile.module.passwords">
    <dirname property="module.passwords.basedir" file="${ant.file.module_passwords}"/>

    <property name="module.jdk.home.passwords" value="${project.jdk.home}"/>
    <property name="module.jdk.bin.passwords" value="${project.jdk.bin}"/>
    <property name="module.jdk.classpath.passwords" value="${project.jdk.classpath}"/>

    <property name="compiler.args.passwords" value="-encoding UTF-8 -source 8 ${compiler.args}"/>

    <property name="passwords.output.dir" value="${module.passwords.basedir}/out/production/Passwords"/>
    <property name="passwords.testoutput.dir" value="${module.passwords.basedir}/out/test/Passwords"/>

    <path id="passwords.module.bootclasspath">
        <!-- Paths to be included in compilation bootclasspath -->
    </path>

    <path id="passwords.module.production.classpath">
        <path refid="${module.jdk.classpath.passwords}"/>
        <path refid="library.sqlite-jdbc4-3.8.2-snapshot.classpath"/>
        <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
        <pathelement location="${idea.home}/lib/hamcrest-library-1.3.jar"/>
        <pathelement location="${idea.home}/lib/junit-4.11.jar"/>
    </path>

    <path id="passwords.runtime.production.module.classpath">
        <pathelement location="${passwords.output.dir}"/>
        <path refid="library.sqlite-jdbc4-3.8.2-snapshot.classpath"/>
        <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
        <pathelement location="${idea.home}/lib/hamcrest-library-1.3.jar"/>
        <pathelement location="${idea.home}/lib/junit-4.11.jar"/>
    </path>

    <path id="passwords.module.classpath">
        <path refid="${module.jdk.classpath.passwords}"/>
        <pathelement location="${passwords.output.dir}"/>
        <path refid="library.sqlite-jdbc4-3.8.2-snapshot.classpath"/>
        <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
        <pathelement location="${idea.home}/lib/hamcrest-library-1.3.jar"/>
        <pathelement location="${idea.home}/lib/junit-4.11.jar"/>
    </path>

    <path id="passwords.runtime.module.classpath">
        <pathelement location="${passwords.testoutput.dir}"/>
        <pathelement location="${passwords.output.dir}"/>
        <path refid="library.sqlite-jdbc4-3.8.2-snapshot.classpath"/>
        <pathelement location="${idea.home}/lib/hamcrest-core-1.3.jar"/>
        <pathelement location="${idea.home}/lib/hamcrest-library-1.3.jar"/>
        <pathelement location="${idea.home}/lib/junit-4.11.jar"/>
    </path>


    <patternset id="excluded.from.module.passwords">
        <patternset refid="ignored.files"/>
    </patternset>

    <patternset id="excluded.from.compilation.passwords">
        <patternset refid="excluded.from.module.passwords"/>
    </patternset>

    <path id="passwords.module.sourcepath">
        <dirset dir="${module.passwords.basedir}">
            <include name="src"/>
        </dirset>
    </path>


    <target name="compile.module.passwords" depends="compile.module.passwords.production,compile.module.passwords.tests"
            description="Compile module Passwords"/>

    <target name="compile.module.passwords.production" description="Compile module Passwords; production classes">
        <mkdir dir="${passwords.output.dir}"/>
        <javac destdir="${passwords.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}"
               memorymaximumsize="${compiler.max.memory}" fork="true" executable="${module.jdk.bin.passwords}/javac">
            <compilerarg line="${compiler.args.passwords}"/>
            <bootclasspath refid="passwords.module.bootclasspath"/>
            <classpath refid="passwords.module.production.classpath"/>
            <src refid="passwords.module.sourcepath"/>
            <patternset refid="excluded.from.compilation.passwords"/>
        </javac>

        <copy todir="${passwords.output.dir}">
            <fileset dir="${module.passwords.basedir}/src">
                <patternset refid="compiler.resources"/>
                <type type="file"/>
            </fileset>
        </copy>
    </target>

    <target name="compile.module.passwords.tests" depends="compile.module.passwords.production"
            description="compile module Passwords; test classes" unless="skip.tests"/>

    <target name="clean.module.passwords" description="cleanup module">
        <delete dir="${passwords.output.dir}"/>
        <delete dir="${passwords.testoutput.dir}"/>
    </target>
</project>